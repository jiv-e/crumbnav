@mixin triangle($direction, $color, $size) {
  display: block;
  content: '';
  width: 0;
  height: 0;
  position: absolute;
  border: $size solid;
  border-color: transparent;
  @if $direction == top {
    border-bottom-color: $color;
  }
  @else if $direction == bottom {
    border-top-color: $color;
  }
  @else if $direction == left {
    border-right-color: $color;
  }
  @else if $direction == right {
    border-left-color: $color;
  }
}

@mixin triangle-outer($direction, $color, $size) {
  @include triangle($direction, $color, $size);
  @if $direction == top {
    top: -2*$size;
    left: 50%;
    margin-left: -$size;
  }
  @else if $direction == bottom {
    bottom: -2*$size;
    left: 50%;
    margin-left: -$size;
  }
  @else if $direction == left {
    left: -2*$size;
    top: 50%;
    margin-top: -$size;
  }
  @else if $direction == right {
    right: -2*$size;
    top: 50%;
    margin-top: -$size;
  }
}

@mixin triangle-inner($direction, $color, $size) {
  @if $direction == top {
    @include triangle(bottom, $color, $size);
    top: 0;
    left: 50%;
    margin-left: -$size;
  }
  @else if $direction == bottom {
    @include triangle(top, $color, $size);
    bottom: 0;
    left: 50%;
    margin-left: -$size;
  }
  @else if $direction == left {
    @include triangle(right, $color, $size);
    left: 0;
    top: 50%;
    margin-top: -$size;
  }
  @else if $direction == right {
    @include triangle(left, $color, $size);
    right: 0;
    top: 50%;
    margin-top: -$size;
  }
}

@mixin triangle-center($direction, $color, $size) {
  @include triangle($direction, $color, $size);
  @if $direction == top {
    top: 50%;
    left: 50%;
    margin-top: -$size*1.5;
    margin-left: -$size;
  }
  @else if $direction == bottom {
    top: 50%;
    left: 50%;
    margin-top: -$size*0.5;
    margin-left: -$size;
  }
  @else if $direction == left {
    top: 50%;
    left: 50%;
    margin-top: -$size;
    margin-left: -$size*1.5;
  }
  @else if $direction == right {
    top: 50%;
    left: 50%;
    margin-top: -$size;
    margin-left: -$size*0.5;
  }
}

@mixin box-model($model:content-box) {
  -moz-box-sizing: $model; -webkit-box-sizing: $model; box-sizing: $model;
  &:before, &:after {
    -moz-box-sizing: $model; -webkit-box-sizing: $model; box-sizing: $model;
  }
}

@mixin horizontal-flex-menu($type:"justified") {
  //Top level menu
  > ul {
    @if $type == "justified" {
      display: flex;
      justify-content: space-around;
    }
  }
  //Second level menu
  > ul > li {
    @if $type != "justified" {
      //position: relative;
    }
    display: block;
    flex-grow: 1;
    flex-basis: 0;
    text-align: center;
    > ul {
      @if $type != "justified" {
        position: absolute;
        top: $elementHeight;
      }
      width: 100%;
      min-width: 16em;
      clear: both;
      display: none;
      flex-direction: column;
      justify-content: flex-start;
      > li {
        @if $type != "justified" {
          position: relative;
        }
        text-align: left;
        display: block;
        .#{$button} {
          display: block;
        }
      }
    }

    &:hover > ul {
      display: flex;
      position: absolute;
    }
  }
  // Last second level menu - prevent overflow from right.
  > ul > li:last-child > ul {
    right: 0;
  }
  .#{$mainModifier} {
    display: none;
  }
}